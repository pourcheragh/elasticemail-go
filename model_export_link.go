/*
Elastic Email REST API

This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>

API version: 4.0.0
Contact: support@elasticemail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package elasticemail

import (
	"encoding/json"
)

// checks if the ExportLink type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExportLink{}

// ExportLink struct for ExportLink
type ExportLink struct {
	// Direct URL to the exported file
	Link *string `json:"Link,omitempty"`
	// ID of the exported file
	PublicExportID *string `json:"PublicExportID,omitempty"`
}

// NewExportLink instantiates a new ExportLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExportLink() *ExportLink {
	this := ExportLink{}
	return &this
}

// NewExportLinkWithDefaults instantiates a new ExportLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExportLinkWithDefaults() *ExportLink {
	this := ExportLink{}
	return &this
}

// GetLink returns the Link field value if set, zero value otherwise.
func (o *ExportLink) GetLink() string {
	if o == nil || IsNil(o.Link) {
		var ret string
		return ret
	}
	return *o.Link
}

// GetLinkOk returns a tuple with the Link field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportLink) GetLinkOk() (*string, bool) {
	if o == nil || IsNil(o.Link) {
		return nil, false
	}
	return o.Link, true
}

// HasLink returns a boolean if a field has been set.
func (o *ExportLink) HasLink() bool {
	if o != nil && !IsNil(o.Link) {
		return true
	}

	return false
}

// SetLink gets a reference to the given string and assigns it to the Link field.
func (o *ExportLink) SetLink(v string) {
	o.Link = &v
}

// GetPublicExportID returns the PublicExportID field value if set, zero value otherwise.
func (o *ExportLink) GetPublicExportID() string {
	if o == nil || IsNil(o.PublicExportID) {
		var ret string
		return ret
	}
	return *o.PublicExportID
}

// GetPublicExportIDOk returns a tuple with the PublicExportID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExportLink) GetPublicExportIDOk() (*string, bool) {
	if o == nil || IsNil(o.PublicExportID) {
		return nil, false
	}
	return o.PublicExportID, true
}

// HasPublicExportID returns a boolean if a field has been set.
func (o *ExportLink) HasPublicExportID() bool {
	if o != nil && !IsNil(o.PublicExportID) {
		return true
	}

	return false
}

// SetPublicExportID gets a reference to the given string and assigns it to the PublicExportID field.
func (o *ExportLink) SetPublicExportID(v string) {
	o.PublicExportID = &v
}

func (o ExportLink) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExportLink) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Link) {
		toSerialize["Link"] = o.Link
	}
	if !IsNil(o.PublicExportID) {
		toSerialize["PublicExportID"] = o.PublicExportID
	}
	return toSerialize, nil
}

type NullableExportLink struct {
	value *ExportLink
	isSet bool
}

func (v NullableExportLink) Get() *ExportLink {
	return v.value
}

func (v *NullableExportLink) Set(val *ExportLink) {
	v.value = val
	v.isSet = true
}

func (v NullableExportLink) IsSet() bool {
	return v.isSet
}

func (v *NullableExportLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExportLink(val *ExportLink) *NullableExportLink {
	return &NullableExportLink{value: val, isSet: true}
}

func (v NullableExportLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExportLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


