/*
Elastic Email REST API

This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>

API version: 4.0.0
Contact: support@elasticemail.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package elasticemail

import (
	"encoding/json"
	"time"
)

// checks if the CampaignOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CampaignOptions{}

// CampaignOptions Different send options for a Campaign
type CampaignOptions struct {
	DeliveryOptimization *DeliveryOptimizationType `json:"DeliveryOptimization,omitempty"`
	// Should the opens be tracked? If no value has been provided, Account's default setting will be used.
	TrackOpens NullableBool `json:"TrackOpens,omitempty"`
	// Should the clicks be tracked? If no value has been provided, Account's default setting will be used.
	TrackClicks NullableBool `json:"TrackClicks,omitempty"`
	// Date when this Campaign is scheduled to be sent on
	ScheduleFor NullableTime `json:"ScheduleFor,omitempty"`
	SplitOptions *SplitOptions `json:"SplitOptions,omitempty"`
}

// NewCampaignOptions instantiates a new CampaignOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignOptions() *CampaignOptions {
	this := CampaignOptions{}
	var deliveryOptimization DeliveryOptimizationType = DELIVERYOPTIMIZATIONTYPE_NONE
	this.DeliveryOptimization = &deliveryOptimization
	return &this
}

// NewCampaignOptionsWithDefaults instantiates a new CampaignOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignOptionsWithDefaults() *CampaignOptions {
	this := CampaignOptions{}
	var deliveryOptimization DeliveryOptimizationType = DELIVERYOPTIMIZATIONTYPE_NONE
	this.DeliveryOptimization = &deliveryOptimization
	return &this
}

// GetDeliveryOptimization returns the DeliveryOptimization field value if set, zero value otherwise.
func (o *CampaignOptions) GetDeliveryOptimization() DeliveryOptimizationType {
	if o == nil || IsNil(o.DeliveryOptimization) {
		var ret DeliveryOptimizationType
		return ret
	}
	return *o.DeliveryOptimization
}

// GetDeliveryOptimizationOk returns a tuple with the DeliveryOptimization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignOptions) GetDeliveryOptimizationOk() (*DeliveryOptimizationType, bool) {
	if o == nil || IsNil(o.DeliveryOptimization) {
		return nil, false
	}
	return o.DeliveryOptimization, true
}

// HasDeliveryOptimization returns a boolean if a field has been set.
func (o *CampaignOptions) HasDeliveryOptimization() bool {
	if o != nil && !IsNil(o.DeliveryOptimization) {
		return true
	}

	return false
}

// SetDeliveryOptimization gets a reference to the given DeliveryOptimizationType and assigns it to the DeliveryOptimization field.
func (o *CampaignOptions) SetDeliveryOptimization(v DeliveryOptimizationType) {
	o.DeliveryOptimization = &v
}

// GetTrackOpens returns the TrackOpens field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CampaignOptions) GetTrackOpens() bool {
	if o == nil || IsNil(o.TrackOpens.Get()) {
		var ret bool
		return ret
	}
	return *o.TrackOpens.Get()
}

// GetTrackOpensOk returns a tuple with the TrackOpens field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CampaignOptions) GetTrackOpensOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrackOpens.Get(), o.TrackOpens.IsSet()
}

// HasTrackOpens returns a boolean if a field has been set.
func (o *CampaignOptions) HasTrackOpens() bool {
	if o != nil && o.TrackOpens.IsSet() {
		return true
	}

	return false
}

// SetTrackOpens gets a reference to the given NullableBool and assigns it to the TrackOpens field.
func (o *CampaignOptions) SetTrackOpens(v bool) {
	o.TrackOpens.Set(&v)
}
// SetTrackOpensNil sets the value for TrackOpens to be an explicit nil
func (o *CampaignOptions) SetTrackOpensNil() {
	o.TrackOpens.Set(nil)
}

// UnsetTrackOpens ensures that no value is present for TrackOpens, not even an explicit nil
func (o *CampaignOptions) UnsetTrackOpens() {
	o.TrackOpens.Unset()
}

// GetTrackClicks returns the TrackClicks field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CampaignOptions) GetTrackClicks() bool {
	if o == nil || IsNil(o.TrackClicks.Get()) {
		var ret bool
		return ret
	}
	return *o.TrackClicks.Get()
}

// GetTrackClicksOk returns a tuple with the TrackClicks field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CampaignOptions) GetTrackClicksOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.TrackClicks.Get(), o.TrackClicks.IsSet()
}

// HasTrackClicks returns a boolean if a field has been set.
func (o *CampaignOptions) HasTrackClicks() bool {
	if o != nil && o.TrackClicks.IsSet() {
		return true
	}

	return false
}

// SetTrackClicks gets a reference to the given NullableBool and assigns it to the TrackClicks field.
func (o *CampaignOptions) SetTrackClicks(v bool) {
	o.TrackClicks.Set(&v)
}
// SetTrackClicksNil sets the value for TrackClicks to be an explicit nil
func (o *CampaignOptions) SetTrackClicksNil() {
	o.TrackClicks.Set(nil)
}

// UnsetTrackClicks ensures that no value is present for TrackClicks, not even an explicit nil
func (o *CampaignOptions) UnsetTrackClicks() {
	o.TrackClicks.Unset()
}

// GetScheduleFor returns the ScheduleFor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CampaignOptions) GetScheduleFor() time.Time {
	if o == nil || IsNil(o.ScheduleFor.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ScheduleFor.Get()
}

// GetScheduleForOk returns a tuple with the ScheduleFor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CampaignOptions) GetScheduleForOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduleFor.Get(), o.ScheduleFor.IsSet()
}

// HasScheduleFor returns a boolean if a field has been set.
func (o *CampaignOptions) HasScheduleFor() bool {
	if o != nil && o.ScheduleFor.IsSet() {
		return true
	}

	return false
}

// SetScheduleFor gets a reference to the given NullableTime and assigns it to the ScheduleFor field.
func (o *CampaignOptions) SetScheduleFor(v time.Time) {
	o.ScheduleFor.Set(&v)
}
// SetScheduleForNil sets the value for ScheduleFor to be an explicit nil
func (o *CampaignOptions) SetScheduleForNil() {
	o.ScheduleFor.Set(nil)
}

// UnsetScheduleFor ensures that no value is present for ScheduleFor, not even an explicit nil
func (o *CampaignOptions) UnsetScheduleFor() {
	o.ScheduleFor.Unset()
}

// GetSplitOptions returns the SplitOptions field value if set, zero value otherwise.
func (o *CampaignOptions) GetSplitOptions() SplitOptions {
	if o == nil || IsNil(o.SplitOptions) {
		var ret SplitOptions
		return ret
	}
	return *o.SplitOptions
}

// GetSplitOptionsOk returns a tuple with the SplitOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignOptions) GetSplitOptionsOk() (*SplitOptions, bool) {
	if o == nil || IsNil(o.SplitOptions) {
		return nil, false
	}
	return o.SplitOptions, true
}

// HasSplitOptions returns a boolean if a field has been set.
func (o *CampaignOptions) HasSplitOptions() bool {
	if o != nil && !IsNil(o.SplitOptions) {
		return true
	}

	return false
}

// SetSplitOptions gets a reference to the given SplitOptions and assigns it to the SplitOptions field.
func (o *CampaignOptions) SetSplitOptions(v SplitOptions) {
	o.SplitOptions = &v
}

func (o CampaignOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CampaignOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeliveryOptimization) {
		toSerialize["DeliveryOptimization"] = o.DeliveryOptimization
	}
	if o.TrackOpens.IsSet() {
		toSerialize["TrackOpens"] = o.TrackOpens.Get()
	}
	if o.TrackClicks.IsSet() {
		toSerialize["TrackClicks"] = o.TrackClicks.Get()
	}
	if o.ScheduleFor.IsSet() {
		toSerialize["ScheduleFor"] = o.ScheduleFor.Get()
	}
	if !IsNil(o.SplitOptions) {
		toSerialize["SplitOptions"] = o.SplitOptions
	}
	return toSerialize, nil
}

type NullableCampaignOptions struct {
	value *CampaignOptions
	isSet bool
}

func (v NullableCampaignOptions) Get() *CampaignOptions {
	return v.value
}

func (v *NullableCampaignOptions) Set(val *CampaignOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignOptions(val *CampaignOptions) *NullableCampaignOptions {
	return &NullableCampaignOptions{value: val, isSet: true}
}

func (v NullableCampaignOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


